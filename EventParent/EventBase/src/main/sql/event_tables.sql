DROP VIEW IF EXISTS VW_EVENTS;
DROP VIEW IF EXISTS VW_EVENT_TEMPLATES;
DROP TABLE IF EXISTS EVENT;
DROP TABLE IF EXISTS EVENT_TEMPLATE;
DROP TABLE IF EXISTS EVENT_TYPE;
DROP TABLE IF EXISTS TIME_LINE_SLOT;
DROP TABLE IF EXISTS TIME_LINE;


CREATE TABLE TIME_LINE (
   ID SERIAL PRIMARY KEY,
   NAME VARCHAR(60) NOT NULL,
   START_DATE DATE NOT NULL,
   END_DATE DATE NOT NULL 
) ;

CREATE TABLE TIME_LINE_SLOT (
   ID SERIAL PRIMARY KEY,
   TIME_LINE_ID INTEGER REFERENCES TIME_LINE,
   FROM_DATE DATE NOT NULL,  
   TO_DATE DATE NOT NULL
) ;


CREATE TABLE EVENT_TYPE (
   ID SERIAL PRIMARY KEY,
   NAME VARCHAR(100) NOT NULL,
   SHORT_NAME VARCHAR(40) NOT NULL,
   DESCRIPTION VARCHAR(200),
--   CREATED TIMESTAMP DEFAULT NOW()
) ;

CREATE TABLE EVENT_TEMPLATE (
   ID SERIAL PRIMARY KEY ,
   EVENT_TYPE_ID INTEGER REFERENCES EVENT_TYPE,
   NAME VARCHAR(100) NOT NULL,
   DOSE VARCHAR(30) NOT NULL,
   UNIT VARCHAR(30) NOT NULL,
   SHORT_NAME VARCHAR(20) NOT NULL,
   DESCRIPTION VARCHAR(200),
   CREATED TIMESTAMP DEFAULT NOW()
) ;

CREATE TABLE EVENT (
   ID SERIAL,
   EVENT_TEMPLATE_ID INTEGER REFERENCES EVENT_TEMPLATE,
   NAME VARCHAR(100) NOT NULL,
   SHORT_NAME VARCHAR(40) NOT NULL,
   DOSE VARCHAR(30) NOT NULL,
   UNIT VARCHAR(30) NOT NULL,
   NOTE VARCHAR(100),
   EVENT_DATE TIMESTAMP DEFAULT NOW(),
   CREATED TIMESTAMP DEFAULT NOW()
) ;


CREATE OR REPLACE VIEW VW_EVENT_TEMPLATES AS
SELECT 
   ETY.ID AS TYPE_ID, ETY.NAME AS ETY_NAME, ETY.SHORT_NAME AS ETY_SHORT,
   ETMP.ID AS TMPL_ID, ETMP.NAME AS ETMP_NAME, ETMP.SHORT_NAME AS ETMP_SHORT
FROM 
   EVENT_TYPE ETY, EVENT_TEMPLATE ETMP
WHERE 
   ETY.ID = ETMP.EVENT_TYPE_ID
ORDER BY 
   ETY_NAME;
   
CREATE OR REPLACE VIEW VW_EVENTS AS
SELECT 
   ETY.ID AS TYPE_ID, ETY.NAME AS ETY_NAME, ETY.SHORT_NAME AS ETY_SHORT,
   ETMP.ID AS TMPL_ID, ETMP.NAME AS ETMP_NAME, ETMP.SHORT_NAME AS ETMP_SHORT,
   E.EVENT_DATE AS E_DATE, E.ID, E.NOTE
FROM 
   EVENT_TYPE ETY, EVENT_TEMPLATE ETMP, EVENT E
WHERE 
   ETY.ID = ETMP.EVENT_TYPE_ID AND ETMP.ID = E.EVENT_TEMPLATE_ID
ORDER BY 
   ETY_NAME;
   