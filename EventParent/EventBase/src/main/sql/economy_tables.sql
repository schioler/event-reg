
DROP TABLE IF EXISTS TIME_INTERVALS;
DROP TABLE IF EXISTS TIME_INTERVAL;
DROP TABLE IF EXISTS TIME_LINE_CONTENT;
DROP TABLE IF EXISTS TIME_LINE_SLOT;
DROP TABLE IF EXISTS TL_CONTENT;
DROP TABLE IF EXISTS TIME_LINE;
DROP TABLE IF EXISTS DAY;
DROP TABLE IF EXISTS MONTH;
DROP TABLE IF EXISTS YEAR;
DROP TABLE IF EXISTS TL_DAY;
DROP TABLE IF EXISTS TL_MONTH;
DROP TABLE IF EXISTS TL_YEAR;

DROP TABLE IF EXISTS POSTING;
DROP TABLE IF EXISTS TRANSACTION;
DROP TABLE IF EXISTS LINE;
DROP TABLE IF EXISTS IMPORTS;
DROP TABLE IF EXISTS PATTERN;
DROP TABLE IF EXISTS NODE;
DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS ORGANISATION;
DROP TABLE IF EXISTS PASSWORD;
DROP TABLE IF EXISTS USER;


CREATE TABLE USER (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   USERNAME VARCHAR(60) NOT NULL 
) ENGINE = INNODB;

CREATE TABLE PASSWORD (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   USER_ID INT NOT NULL,
   USERNAME VARCHAR(60) NOT NULL,
   FROM_DATE DATETIME NOT NULL,
   TO_DATE DATETIME  ,
   FOREIGN KEY (USER_ID) REFERENCES USER(ID) 
) ENGINE = INNODB;
 

CREATE TABLE TIME_LINE (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   NAME VARCHAR(60) NOT NULL,
   START_DATE DATE NOT NULL,
   END_DATE DATE NOT NULL 
) ENGINE = INNODB;

CREATE TABLE TIME_LINE_SLOT (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   TIME_LINE_ID INT NOT NULL,
   FROM_DATE DATE NOT NULL,  
   TO_DATE DATE NOT NULL,
   FOREIGN KEY (TIME_LINE_ID) REFERENCES TIME_LINE(ID) ON DELETE CASCADE
) ENGINE = INNODB;


CREATE TABLE ORGANISATION (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   NAME VARCHAR (200) NOT NULL,
   DESCRIPTION VARCHAR (200)
) ENGINE = INNODB;

CREATE TABLE ACCOUNT (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ORGANISATION_ID INT,
	NAME VARCHAR (200) NOT NULL,
	NUMBER VARCHAR (100) NOT NULL,
	EXT_NAME VARCHAR (200) ,
   EXT_NUMBER VARCHAR (100) ,
	DESCRIPTION VARCHAR (200),
	TYPE ENUM('DEBIT', 'CREDIT', 'UNDEF') NOT NULL,
   FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION(ID) 
) ENGINE = INNODB;

CREATE TABLE NODE ( 
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   ACCOUNT_ID INT NOT NULL,
   PATH VARCHAR (400) NOT NULL,
   PARENT_ID INT,
   LEVEL INT, 
   FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID) ON DELETE CASCADE,
   FOREIGN KEY (PARENT_ID) REFERENCES NODE(ID) ON DELETE CASCADE
)ENGINE = INNODB;


CREATE TABLE PATTERN (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ACCOUNT_ID INT NOT NULL ,
	PATTERN VARCHAR (300) NOT NULL UNIQUE,
	FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID)
)ENGINE = INNODB;

CREATE TABLE IMPORTS (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ACCOUNT_ID INT NOT NULL,
	FILE_PATH VARCHAR(100),
	START_TIME DATETIME NOT NULL DEFAULT now(),
	END_TIME DATETIME,	
	LINES_TOTAl INT,
	LINES_SUCCESSFUL INT,
	LINES_UNSUCCESSFUL INT,
   FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID)
)ENGINE = INNODB;

    
CREATE TABLE LINE (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	IMPORTS_ID INT NOT NULL,
	LINE_NUMBER INT NOT NULL,
	LINE_DATE TIMESTAMP NOT NULL,
	LINE_TEXT VARCHAR(200) NOT NULL,
	LINE_AMOUNT DECIMAL(20,2) NOT NULL,
	LINE_STORED_BALANCE DECIMAL(20,2) NOT NULL,
	FOREIGN KEY (IMPORTS_ID) REFERENCES IMPORTS(ID),
	UNIQUE (LINE_DATE, LINE_TEXT, LINE_AMOUNT, LINE_STORED_BALANCE )
)ENGINE = INNODB;


CREATE TABLE TRANSACTION(
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   LINE_ID INT NOT NULL,
   TEXT VARCHAR(200),
   FOREIGN KEY (LINE_ID) REFERENCES LINE(ID)
) ENGINE = INNODB;


CREATE TABLE POSTING (
   ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   TRANSACTION_ID INT NOT NULL,
   ACCOUNT_ID INT NOT NULL,   
   DATE TIMESTAMP NOT NULL,
   AMOUNT DECIMAL(20,2) NOT NULL,
   POSTING_TYPE ENUM('DEBIT', 'CREDIT') NOT NULL,
   FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION(ID),
   FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID)
) ENGINE = INNODB;
 